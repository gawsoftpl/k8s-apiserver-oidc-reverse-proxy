name: Release Proxy & Helm Chart

on:
  push:
    tags:
      - 'v*'   # triggers on version tags like v1.0.0

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/k8s-jwks-proxy
  CHART_NAME: k8s-jwks-proxy

jobs:

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract tag
      id: extract_tag
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

    - name: Build and push image
      run: |
        docker build -t $IMAGE_NAME:$TAG .
        docker push $IMAGE_NAME:$TAG

  helm:
    name: Package & Push Helm Chart to GHCR
    runs-on: ubuntu-latest
    needs: docker

    permissions:
      packages: write
      contents: read

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.14.0

    - name: Log in to GHCR for Helm
      run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin

    - name: Extract tag for Helm version
      run: echo "CHART_VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

    - name: Package Helm chart
      run: |
        helm package charts/${{ env.CHART_NAME }} --version $CHART_VERSION

    - name: Push Helm chart to GHCR
      run: |
        helm push $CHART_NAME-$CHART_VERSION.tgz oci://ghcr.io/${{ github.repository_owner }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [docker, helm]

    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
